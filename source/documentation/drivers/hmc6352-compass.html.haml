---
title: Artoo - HMC6352 Digital Compass Driver
author: The Hybrid Group
page_title: HMC6352 Digital Compass
page_subtitle: Driver
layout: page
---
.documentation
  %section.intro
    =image_tag "/images/hmc6352-compass.jpg", class: "display"
    %p
      Allows user to read heading from HMC6352 Digital Compass via i2c interface

  %section.how-to
    %h2 How to establish a connection and setup the driver
    %h3 For Arduino:
    :markdown
          :::ruby
          require 'artoo'
          connection :arduino, :adaptor => :firmata, :port => '/dev/ttyACM0'
          device :compass, :driver => :hmc_6352_compass, :connection => :arduino, :interval => 0.5

  %section.public-methods
    %h2 Public instance methods:
    %h3 heading â†’ float
    %p
      Returns the heading data for the compass.

  %section.public-events
    %h2 Public driver events:
    %h3 heading
    %p
      Gets triggered every time the specified interval is met.

    %h3 How to use events and call them on your drivers
    %p Pretty simple, when the connection and the driver have been setup (as explained above) you can call events on them as follows:
    :markdown
          :::ruby
          on compass, :heading => proc { |caller, data| puts "heading: \#{data}"}

  %section.how-to
    %h2 How to use
    %h3 Example using a HMC6352 Digital Compass.
    :markdown
          :::ruby
          require 'artoo'

          connection :arduino, :adaptor => :firmata, :port => '/dev/ttyACM0'
          device :compass, :driver => :hmc_6352_compass, :connection => :arduino, :interval => 0.5

          work do
            on compass, :heading => proc { |caller, data| puts "heading: \#{data}"}
          end

  %section.circuit
    %h2 Circuit and Schematic
    %p
      Coming soon...

  %section.compatability.hardware
    %h2 Works with:
    .devices
      = partial "documentation/partials/arduino"
      = partial "documentation/partials/beaglebone"
      = partial "documentation/partials/digispark"
      = partial "documentation/partials/raspberry-pi"
