---
page_title_show: true
title: Artoo - Sphero Driver
author: The Hybrid Group
page_title: Sphero
page_subtitle: Driver
layout: documentation

sphero_platform: true
---
%section.intro
  =image_tag "/images/devices/sphero.jpg", class: "display"
  %p Allows user to interact with the Sphero robotic sphero using Artoo.

%section.how-to
  %h2 How to establish a connection and setup the driver
  %p
    That is pretty simple once the Sphero is ready (connected and listening), you just need three lines of code and you are set,
    Artoo and the Sphero driver take care of the rest.
  :markdown
        :::ruby
        require 'artoo'
        connection :sphero, :adaptor => :sphero, :port => '127.0.0.1:8023'
        device :sphero, :driver => :sphero

%section.public-methods
  %h2 Commands:
  %table.commands  
    %tr 
      %th Command (param)
      %th Description
    %tr 
      %td.command roll(speed, direction)
      %td.param  
        %p Starts the sphero rolling at the provided speed (value between 0 and 255) and direction (value between 0 and 360).
        %h5 Params
        %span (speed, direction) → true | nil
        %h5 Returns 
        %span true | nil
    %tr 
      %td.command stop 
      %td.param  
        %p Stops the sphero.
        %h5 Params
        %span no params
        %h5 Returns 
        %span true | nil
    %tr 
      %td.command detect_collissions 
      %td.param  
        %p Sets the sphero to detect collisions and report them.
        %h5 Params
        %span no params
        %h5 Returns 
        %span true | nil
    %tr 
      %td.command messages 
      %td.param  
        %p Returns an array of sphero events, the messages reported by the sphero.
        %h5 Params
        %span no params
        %h5 Returns 
        %span [sphero_event]
    %tr 
      %td.command color(:color_symbol | [red, green, blue]) 
      %td.param  
        %p 
          You can pass a color as a symbol or an array containing RGB colors from 0 to 255 
          %span ([255, 0, 0] == red)
          if passed a symbol returns the array of RGB corresponding to the color, if passed an array of colors it returns the same array (used when setting colors to the sphero). 
        %h5 Params
        %span (:color_symbol | [red, green, blue]) → [red_int, green_int, blue_int]
        %h5 Returns 
        %span [red_int, green_int, blue_int] 
    %tr 
      %td.command set_color([red, green, blue])
      %td.param  
        %p 
          You can either use it in tandem with color to set the color of the sphero or just pass an array containing RGB colors on the range 0 to 255 
          %span ([255, 0, 0] == red).
        %h5 Params
        %span ([red, green, blue]) → true | nil
        %h5 Returns 
        %span true | nil


%section.public-events
  %h2 Events:
  %p Public events are triggered when something occurs to your sphero, when this occurs you can execute some code to respond accordingly, depending on the event triggered, you can access the following public events when programming the Sphero.
  %table.commands 
    %tr 
      %th Event
      %th Description
    %tr 
      %td.command 
        %span :colission
      %td Gets triggered when the sphero hits something or falls from a step.

  %h3 How to use events and call them on your drivers
  %p Pretty simple, when the connection and the driver have been setup (as explained above) you can call events on the sphero driver as follows:
  :markdown
        :::ruby
        # :contact is the name of a previously defined method containing the code to execute.
        on sphero, :collision => :contact

%section 
  %h2 Sphero Colors (R,G,B)
  %table.commands 
    %tr 
      %th Example
      %th Name
      %th Code
      %th Example
      %th Name
      %th Code
    %tr 
      %td
        .aliceblue.square
      %td.command 
        %span aliceblue
      %td (240, 248, 255)
      %td
        .antiquewhite.square
      %td.command 
        %span antiquewhite
      %td (250, 235, 215) 
    %tr 
      %td
        .aqua.square
      %td.command 
        %span aqua
      %td (0, 255, 255)
      %td
        .aquamarine.square
      %td.command 
        %span aquamarine
      %td (127, 255, 212)
    %tr 
      %td
        .azure.square
      %td.command 
        %span azure
      %td (240, 255, 255)
      %td
        .beige.square
      %td.command 
        %span beige
      %td (245, 245, 220)
    %tr 
      %td
        .bisque.square
      %td.command 
        %span bisque
      %td (255, 228, 196)
      %td
        .black.square
      %td.command 
        %span black
      %td (0, 0, 0)
    %tr 
      %td
        .blanchedalmond.square
      %td.command 
        %span blanchedalmond
      %td (255, 235, 205)
      %td
        .blue.square
      %td.command 
        %span blue
      %td (0, 0, 255)
    %tr 
      %td
        .blueviolet.square
      %td.command 
        %span blueviolet
      %td (138, 43, 226)
      %td
        .brown.square
      %td.command 
        %span brown
      %td (165, 42, 42)
    %tr 
      %td
        .burlywood.square
      %td.command 
        %span burlywood
      %td (222, 184, 135)
      %td
        .cadetblue.square
      %td.command 
        %span cadetblue
      %td (95, 158, 160)
    %tr 
      %td
        .chartreuse.square
      %td.command 
        %span chartreuse
      %td (127, 255, 0)
      %td
        .chocolate.square
      %td.command 
        %span chocolate
      %td (210, 105, 30)
    %tr 
      %td
        .coral.square
      %td.command 
        %span coral
      %td (255, 127, 80)
      %td
        .cornflowerblue.square
      %td.command 
        %span cornflowerblue
      %td (100, 149, 237)
    %tr 
      %td
        .cornsilk.square
      %td.command 
        %span cornsilk
      %td (255, 248, 220)
      %td
        .crimson.square
      %td.command 
        %span crimson
      %td (220, 20, 60)
    %tr 
      %td
        .cyan.square
      %td.command 
        %span cyan
      %td (0, 255, 255)
      %td
        .darkblue.square
      %td.command 
        %span darkblue
      %td (0, 0, 139)
    %tr 
      %td
        .darkcyan.square
      %td.command 
        %span darkcyan
      %td (0, 139, 139)
      %td
        .darkgoldenrod.square
      %td.command 
        %span darkgoldenrod
      %td (184, 134, 11)
    %tr 
      %td
        .darkgray.square
      %td.command 
        %span darkgray
      %td (169, 169, 169)
      %td
        .darkgreen.square
      %td.command 
        %span darkgreen
      %td (0, 100, 0)
    %tr 
      %td
        .darkkhaki.square
      %td.command 
        %span darkkhaki
      %td (189, 183, 107)
      %td
        .darkmagenta.square
      %td.command 
        %span darkmagenta
      %td (139, 0, 139)
    %tr 
      %td
        .darkolivegreen.square
      %td.command 
        %span darkolivegreen
      %td (85, 107, 47)
      %td
        .darkorange.square
      %td.command 
        %span darkorange
      %td (255, 140, 0)
    %tr 
      %td
        .darkorchid.square
      %td.command 
        %span darkorchid
      %td (153, 50, 204)
      %td
        .darkred.square
      %td.command 
        %span darkred
      %td (139, 0, 0)
    %tr 
      %td
        .darksalmon.square
      %td.command 
        %span darksalmon
      %td (233, 150, 122)
      %td
        .darkseagreen.square
      %td.command 
        %span darkseagreen
      %td (143, 188, 143)
    %tr 
      %td
        .darkslateblue.square
      %td.command 
        %span darkslateblue
      %td (72, 61, 139)
      %td
        .darkseagreen.square
      %td.command 
        %span darkslategray
      %td (47, 79, 79)
    %tr 
      %td
        .darkturquoise.square
      %td.command 
        %span darkturquoise
      %td (0, 206, 209)
      %td
        .darkviolet.square
      %td.command 
        %span darkviolet
      %td (148, 0, 211)
    %tr 
      %td
        .deeppink.square
      %td.command 
        %span deeppink
      %td (255, 20, 147)
      %td
        .deepskyblue.square
      %td.command 
        %span deepskyblue
      %td (0, 191, 255)
    %tr 
      %td
        .dimgray.square
      %td.command 
        %span dimgray
      %td (105, 105, 105)
      %td
        .dodgerblue.square
      %td.command 
        %span dodgerblue
      %td (30, 144, 255)
    %tr 
      %td
        .firebrick.square
      %td.command 
        %span firebrick
      %td (178, 34, 34)
      %td
        .floralwhite.square
      %td.command 
        %span floralwhite
      %td (255, 250, 240)
    %tr 
      %td
        .forestgreen.square
      %td.command 
        %span forestgreen
      %td (34, 139, 34)
      %td
        .fuchsia.square
      %td.command 
        %span fuchsia
      %td (255, 0, 255)
    %tr 
      %td
        .gainsboro.square
      %td.command 
        %span gainsboro
      %td (220, 220, 220)
      %td
        .ghostwhite.square
      %td.command 
        %span ghostwhite
      %td (248, 248, 255)
    %tr 
      %td
        .gold.square
      %td.command 
        %span gold
      %td (255, 215, 0)
      %td
        .goldenrod.square
      %td.command 
        %span goldenrod
      %td (218, 165, 32)
    %tr 
      %td
        .gray.square
      %td.command 
        %span gray
      %td (128, 128, 128)
      %td
        .green.square
      %td.command 
        %span green
      %td (0, 128, 0)
    %tr 
      %td
        .greenyellow.square
      %td.command 
        %span greenyellow
      %td (173, 255, 47)
      %td
        .honeydew.square
      %td.command 
        %span honeydew
      %td (240, 255, 240)
    %tr 
      %td
        .hotpink.square
      %td.command 
        %span hotpink
      %td (255, 105, 180)
      %td
        .indianred.square
      %td.command 
        %span indianred
      %td (205, 92, 92)
    %tr 
      %td
        .indigo.square
      %td.command 
        %span indigo
      %td (75, 0, 130)
      %td
        .ivory.square
      %td.command 
        %span ivory
      %td (255, 255, 240)
    %tr 
      %td
        .khaki.square
      %td.command 
        %span khaki
      %td (240, 230, 140)
      %td
        .lavender.square
      %td.command 
        %span lavender
      %td (230, 230, 250)
    %tr 
      %td
        .lavenderblush.square
      %td.command 
        %span lavenderblush
      %td (255, 240, 245)
      %td
        .lawngreen.square
      %td.command 
        %span lawngreen
      %td (124, 252, 0)
    %tr 
      %td
        .lemonchiffon.square
      %td.command 
        %span lemonchiffon
      %td (255, 250, 205)
      %td
        .lightblue.square
      %td.command 
        %span lightblue
      %td (173, 216, 230)
    %tr 
      %td
        .lightcoral.square
      %td.command 
        %span lightcoral
      %td (240, 128, 128)
      %td
        .lightcyan.square
      %td.command 
        %span lightcyan
      %td (224, 255, 255) 
    %tr 
      %td
        .lightgoldenrodyellow.square
      %td.command 
        %span lightgoldenrodyellow
      %td (250, 250, 210)
      %td
        .lightgreen.square
      %td.command 
        %span lightgreen
      %td (144, 238, 144) 
    %tr 
      %td
        .lightgrey.square
      %td.command 
        %span lightgrey
      %td (211, 211, 211)
      %td
        .lightpink.square
      %td.command 
        %span lightpink
      %td (255, 182, 193) 
    %tr 
      %td
        .lightsalmon.square
      %td.command 
        %span lightsalmon
      %td (255, 160, 122)
      %td
        .lightseagreen.square
      %td.command 
        %span lightseagreen
      %td (32, 178, 170) 
    %tr 
      %td
        .lightskyblue.square
      %td.command 
        %span lightskyblue
      %td (135, 206, 250)
      %td
        .lightslategray.square
      %td.command 
        %span lightslategray
      %td (119, 136, 153)
    %tr 
      %td
        .lightsteelblue.square
      %td.command 
        %span lightsteelblue
      %td (176, 196, 222)
      %td
        .lightyellow.square
      %td.command 
        %span lightyellow
      %td (255, 255, 224)
    %tr 
      %td
        .lime.square
      %td.command 
        %span lime
      %td (0, 255, 0)
      %td
        .limegreen.square
      %td.command 
        %span limegreen
      %td (50, 205, 50)
    %tr 
      %td
        .linen.square
      %td.command 
        %span linen
      %td (250, 240, 230)
      %td
        .magenta.square
      %td.command 
        %span magenta
      %td (255, 0, 255)
    %tr 
      %td
        .maroon.square
      %td.command 
        %span maroon
      %td (128, 0, 0)
      %td
        .mediumaquamarine.square
      %td.command 
        %span mediumaquamarine
      %td (102, 205, 170)
    %tr 
      %td
        .mediumblue.square
      %td.command 
        %span mediumblue
      %td (0, 0, 205)
      %td
        .mediumorchid.square
      %td.command 
        %span mediumorchid
      %td (186, 85, 211)
    %tr 
      %td
        .mediumpurple.square
      %td.command 
        %span mediumpurple
      %td (147, 112, 219)
      %td
        .mediumseagreen.square
      %td.command 
        %span mediumseagreen
      %td (60, 179, 113)
    %tr 
      %td
        .mediumslateblue.square
      %td.command 
        %span mediumslateblue
      %td (123, 104, 238)
      %td
        .mediumspringgreen.square
      %td.command 
        %span mediumspringgreen
      %td (0, 250, 154)
    %tr 
      %td
        .mediumturquoise.square
      %td.command 
        %span mediumturquoise
      %td (72, 209, 204)
      %td
        .mediumvioletred.square
      %td.command 
        %span mediumvioletred
      %td (199, 21, 133)
    %tr 
      %td
        .midnightblue.square
      %td.command 
        %span midnightblue
      %td (25, 25, 112)
      %td
        .mintcream.square
      %td.command 
        %span mintcream
      %td (245, 255, 250)
    %tr 
      %td
        .mistyrose.square
      %td.command 
        %span mistyrose
      %td (255, 228, 225)
      %td
        .moccasin.square
      %td.command 
        %span moccasin
      %td (255, 228, 181)
    %tr 
      %td
        .navajowhite.square
      %td.command 
        %span navajowhite
      %td (255, 222, 173)
      %td
        .navy.square
      %td.command 
        %span navy
      %td (0, 0, 128)
    %tr 
      %td
        .oldlace.square
      %td.command 
        %span oldlace
      %td (253, 245, 230)
      %td
        .olive.square
      %td.command 
        %span olive
      %td (128, 128, 0)
    %tr 
      %td
        .olivedrab.square
      %td.command 
        %span olivedrab
      %td (107, 142, 35)
      %td
        .orange.square
      %td.command 
        %span orange
      %td (255, 165, 0)
    %tr 
      %td
        .orangered.square
      %td.command 
        %span orangered
      %td (255, 69, 0)
      %td
        .orchid.square
      %td.command 
        %span orchid
      %td (218, 112, 214)
    %tr 
      %td
        .palegoldenrod.square
      %td.command 
        %span palegoldenrod
      %td (238, 232, 170)
      %td
        .palegreen.square
      %td.command 
        %span palegreen
      %td (152, 251, 152)
    %tr 
      %td
        .paleturquoise.square
      %td.command 
        %span paleturquoise
      %td (175, 238, 238)
      %td
        .palevioletred.square
      %td.command 
        %span palevioletred
      %td (219, 112, 147)
    %tr 
      %td
        .papayawhip.square
      %td.command 
        %span papayawhip
      %td (255, 239, 213)
      %td
        .peachpuff.square
      %td.command 
        %span peachpuff
      %td (255, 218, 185)
    %tr 
      %td
        .peru.square
      %td.command 
        %span peru
      %td (205, 133, 63)
      %td
        .pink.square
      %td.command 
        %span pink
      %td (255, 192, 203)
    %tr 
      %td
        .plum.square
      %td.command 
        %span plum
      %td (221, 160, 221)
      %td
        .powderblue.square
      %td.command 
        %span powderblue
      %td (176, 224, 230)
    %tr 
      %td
        .purple.square
      %td.command 
        %span purple
      %td (128, 0, 128)
      %td
        .red.square
      %td.command 
        %span red
      %td (255, 0, 0)
    %tr 
      %td
        .rosybrown.square
      %td.command 
        %span rosybrown
      %td (188, 143, 143)      
      %td
        .royalblue.square
      %td.command 
        %span royalblue
      %td (65, 105, 225)
    %tr 
      %td
        .saddlebrown.square
      %td.command 
        %span saddlebrown
      %td (139, 69, 19)     
      %td
        .salmon.square
      %td.command 
        %span salmon
      %td (250, 128, 114)
    %tr 
      %td
        .sandybrown.square
      %td.command 
        %span sandybrown
      %td (244, 164, 96)    
      %td
        .seagreen.square
      %td.command 
        %span seagreen
      %td (46, 139, 87)
    %tr 
      %td
        .seashell.square
      %td.command 
        %span seashell
      %td (255, 245, 238)
      %td
        .sienna.square
      %td.command 
        %span sienna
      %td (160, 82, 45)
    %tr 
      %td
        .silver.square
      %td.command 
        %span silver
      %td (192, 192, 192)
      %td
        .skyblue.square
      %td.command 
        %span skyblue
      %td (135, 206, 235)
    %tr 
      %td
        .slateblue.square
      %td.command 
        %span slateblue
      %td (106, 90, 205)
      %td
        .slategray.square
      %td.command 
        %span slategray
      %td (112, 128, 144)
    %tr 
      %td
        .snow.square
      %td.command 
        %span snow
      %td (255, 250, 250)
      %td
        .springgreen.square
      %td.command 
        %span springgreen
      %td (0, 255, 127)
    %tr 
      %td
        .steelblue.square
      %td.command 
        %span steelblue
      %td (70, 130, 180)
      %td
        .tan.square
      %td.command 
        %span tan
      %td (210, 180, 140)
    %tr 
      %td
        .teal.square
      %td.command 
        %span teal
      %td (0, 128, 128)
      %td
        .thistle.square
      %td.command 
        %span thistle
      %td (216, 191, 216)
    %tr 
      %td
        .tomato.square
      %td.command 
        %span tomato
      %td (255, 99, 71)
      %td
        .turquoise.square
      %td.command 
        %span turquoise
      %td (64, 224, 208)
    %tr 
      %td
        .violet.square
      %td.command 
        %span violet
      %td (238, 130, 238)
      %td
        .wheat.square
      %td.command 
        %span wheat
      %td (245, 222, 179)
    %tr 
      %td
        .white.square
      %td.command 
        %span white
      %td (255, 255, 255)
      %td
        .whitesmoke.square
      %td.command 
        %span whitesmoke
      %td (245, 245, 245)
    %tr 
      %td
        .yellow.square
      %td.command 
        %span yellow
      %td (255, 255, 0)
      %td
        .yellowgreen.square
      %td.command 
        %span yellowgreen
      %td (154, 205, 50)
      
%section.how-to
  %h2 How to use
  %h3 Example to roll the sphero in a random direction and change direction every 3 seconds.
  :markdown
        :::ruby
        require 'artoo'

        connection :sphero, :adaptor => :sphero, :port => '127.0.0.1:4567'
        device :sphero, :driver => :sphero

        work do
          @rolling = false

          every(3.seconds) do
            puts "Rolling..."
            unless @rolling
              sphero.roll 90, rand(360)
              @rolling = true
            else
              sphero.stop
              @rolling = false
            end
          end
        end

%section.compatability.hardware
  %h2 Works with:
  .devices
    =# TODO: Update platform list at the top of the page.
    = partial "documentation/partials/devices_platforms"
