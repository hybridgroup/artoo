---
page_title_show: true
title: Artoo - Wii Classic Controller Driver
author: The Hybrid Group
page_title: Wii Classic Controller
page_subtitle: Driver
layout: documentation

arduino_platform: true
beaglebone_platform: true
digispark_platform: true
raspberry_platform: true
---

%section.intro
  =image_tag "/images/devices/wii-classic-controller.jpg", class: "display"
  %p
    Allows user to use a Nintendo Wii Classic Controller via i2c interface

%section.how-to
  %h2 How to establish a connection and setup the driver
  %h3 For Arduino:
  :markdown
        :::ruby
        require 'artoo'
        connection :arduino, :adaptor => :firmata, :port => '127.0.0.1:8023'
        device :wiiclassic, :driver => :wiiclassic, :connection :arduino

  %h3 For Digispark:
  :markdown
        :::ruby
        require 'artoo'
        connection :digispark, :adaptor => :littlewire, :vendor => 0x1781, :product => 0x0c9f
        device :wiiclassic, :driver => :wiiclassic, :connection :digispark

%section.public-methods
  %h2 Events:
  %table.commands 
    %tr 
      %th Event
      %th Description
    %tr 
      %td.command 
        %span a_button
      %td Get's triggered every interval amount of time if the a button is pressed.
    %tr 
      %td.command 
        %span b_button
      %td Get's triggered every interval amount of time if the b button is pressed.
    %tr 
      %td.command 
        %span x_button
      %td Get's triggered every interval amount of time if the x button is pressed.
    %tr 
      %td.command 
        %span y_button
      %td Get's triggered every interval amount of time if the y button is pressed. 
    %tr 
      %td.command 
        %span home_button
      %td Get's triggered every interval amount of time if the home button is pressed.
    %tr 
      %td.command 
        %span select_button
      %td Get's triggered every interval amount of time if the select button (-) is pressed. 
    %tr 
      %td.command 
        %span start_button
      %td Get's triggered every interval amount of time if the start button (+) is pressed.
    %tr 
      %td.command 
        %span right_trigger
      %td Get's triggered every interval amount of time if the right trigger button is pressed, makes right trigger value available.
    %tr 
      %td.command 
        %span left_trigger
      %td Get's triggered every interval amount of time if the left trigger button is pressed, makes left trigger value available.
    %tr 
      %td.command 
        %span left_joystick
      %td 
        Get's triggered every "interval" amount of time if a left joystick event occured, you can access values
        %span x, y.
    %tr 
      %td.command 
        %span right_joystick
      %td 
        Get's triggered every "interval" amount of time if a right joystick event occured, you can access values 
        %span x, y.

        
  %h3 How to use events and call them on your drivers
  %p Pretty simple, when the connection and the driver have been setup (as explained above) you can call events on them as follows:
  :markdown
        :::ruby
        on wiiclassic, :a_button => proc { puts "a button pressed!" }

%section.how-to
  %h2 How to use
  %h3 Example using a Nintendo Wii Classic Controller comming soon.
  :markdown
        :::ruby
        require 'artoo'

        connection :arduino, :adaptor => :firmata, :port => "127.0.0.1:8023"
        device :wiiclassic, :driver => :wiiclassic, :connection => :arduino, :interval => 0.1

        work do
          on wiiclassic, :a_button => proc { puts "c button pressed!" }
          on wiiclassic, :b_button => proc { puts "z button pressed!" }
          on wiiclassic, :left_joystick => proc { |*value|
            puts "joystick x: " + value[1][:x] + ", y: " + value[1][:y]
          }
        end

%section.circuit
  %h2 Circuit and Schematic
  %p Coming soon...

%section.compatability.hardware
  %h2 Works with:
  .devices
    =# TODO: Update platform list at the top of the page.
    = partial "documentation/partials/devices_platforms"
